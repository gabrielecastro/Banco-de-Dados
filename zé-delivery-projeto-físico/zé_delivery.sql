-- FORNECEDOR
CREATE TABLE [FORNECEDOR]
(
[ID_FORNECEDOR] INTEGER NOT NULL,
[NOME] NVARCHAR(160) NOT NULL,
[EMAIL] NVARCHAR(160) NOT NULL,
[ENDERECO] NVARCHAR(160) NOT NULL,
[CNPJ] NVARCHAR(160) NOT NULL,
[TELEFONE] NVARCHAR(160) NOT NULL,
CONSTRAINT [PK_FORNECEDOR] PRIMARY KEY ([ID_FORNECEDOR])
);
CREATE UNIQUE INDEX [IPK_FORNECEDOR] ON [FORNECEDOR]([ID_FORNECEDOR]);

-- USUARIO
CREATE TABLE [USUARIO]
(
[ID_USUARIO] INTEGER NOT NULL,
[LOGIN] NVARCHAR(160) NOT NULL,
[SENHA] NVARCHAR(160) NOT NULL,
[EMAIL] NVARCHAR(160) NOT NULL,
CONSTRAINT [PK_USUARIO] PRIMARY KEY ([ID_USUARIO])
);
CREATE UNIQUE INDEX [IPK_USUARIO] ON [USUARIO]([ID_USUARIO]);

-- LOJA
CREATE TABLE [LOJA]
(
[ID_LOJA] INTEGER NOT NULL,
[NOME] NVARCHAR(160) NOT NULL,
[ENDERECO] NVARCHAR(160) NOT NULL,
[TELEFONE] NVARCHAR(160) NOT NULL,
CONSTRAINT [PK_LOJA] PRIMARY KEY ([ID_LOJA])
);
CREATE UNIQUE INDEX [IPK_LOJA] ON [LOJA]([ID_LOJA]);

-- CLIENTE
CREATE TABLE [CLIENTE]
(
[ID_CLIENTE] INTEGER NOT NULL,
[ID_USUARIO] INTEGER NOT NULL,
[NOME] NVARCHAR(160) NOT NULL,
[CPF] NVARCHAR(160) NOT NULL,
[ENDERECO] NVARCHAR(160) NOT NULL,
[TELEFONE] NVARCHAR(160) NOT NULL,
CONSTRAINT [PK_CLIENTE] PRIMARY KEY ([ID_CLIENTE]),
CONSTRAINT [FK_CLIENTE_USUARIO] FOREIGN KEY ([ID_USUARIO]) REFERENCES
USUARIO(ID_USUARIO)
);
CREATE UNIQUE INDEX [IPK_CLIENTE] ON [CLIENTE]([ID_CLIENTE]);

-- VENDEDOR
CREATE TABLE [VENDEDOR]
(
[ID_VENDEDOR] INTEGER NOT NULL,
[ID_USUARIO] INTEGER NOT NULL,
[ID_LOJA] INTEGER NOT NULL,
[NOME] NVARCHAR(160) NOT NULL,
[CPF] NVARCHAR(160) NOT NULL,
[ENDERECO] NVARCHAR(160) NOT NULL,
[TELEFONE] NVARCHAR(160) NOT NULL,
[ADMIN] BOOLEAN NOT NULL,
CONSTRAINT [PK_VENDEDOR] PRIMARY KEY ([ID_VENDEDOR])
CONSTRAINT [FK_VENDEDOR_USUARIO] FOREIGN KEY ([ID_USUARIO]) REFERENCES
USUARIO(ID_USUARIO),
CONSTRAINT [FK_VENDEDOR_LOJA] FOREIGN KEY ([ID_LOJA]) REFERENCES
LOJA(ID_LOJA)
);
CREATE UNIQUE INDEX [IPK_VENDEDOR] ON [VENDEDOR]([ID_VENDEDOR]);

-- PRODUTO
CREATE TABLE [PRODUTO]
(
[ID_PRODUTO] INTEGER NOT NULL,
[ID_FORNECEDOR] INTEGER NOT NULL,
[NOME] NVARCHAR(160) NOT NULL,
[VALOR_PRODUTO] DOUBLE NOT NULL,
CONSTRAINT [PK_PRODUTO] PRIMARY KEY ([ID_PRODUTO])
CONSTRAINT [FK_PRODUTO_FORNECEDOR] FOREIGN KEY ([ID_FORNECEDOR]) REFERENCES
FORNECEDOR(ID_FORNECEDOR)
);
CREATE UNIQUE INDEX [IPK_PRODUTO] ON [PRODUTO]([ID_PRODUTO]);

-- ESTOQUE
CREATE TABLE [ESTOQUE]
(
[ID_ESTOQUE] INTEGER NOT NULL,
[ID_PRODUTO] INTEGER NOT NULL,
[ID_LOJA] INTEGER NOT NULL,
[QUTD_PRODUTO] INTEGER NOT NULL,
CONSTRAINT [PK_ESTOQUE] PRIMARY KEY ([ID_ESTOQUE])
CONSTRAINT [FK_ESTOQUE_PRODUTO] FOREIGN KEY ([ID_PRODUTO]) REFERENCES
PRODUTO(ID_PRODUTO),
CONSTRAINT [FK_ESTOQUE_LOJA] FOREIGN KEY ([ID_LOJA]) REFERENCES
LOJA(ID_LOJA)
);
CREATE UNIQUE INDEX [IPK_ESTOQUE] ON [ESTOQUE]([ID_ESTOQUE]);

-- RELATORIO
CREATE TABLE [RELATORIO]
(
[ID_RELATORIO] INTEGER NOT NULL,
[ID_LOJA] INTEGER NOT NULL,
[VALOR_TOTAL] DOUBLE NOT NULL,
[DATA_INICIO] DATETIME NOT NULL,
[DATA_FIM] DATETIME NOT NULL,
CONSTRAINT [PK_RELATORIO] PRIMARY KEY ([ID_RELATORIO])
CONSTRAINT [FK_RELATORIO_LOJA] FOREIGN KEY ([ID_LOJA]) REFERENCES
LOJA(ID_LOJA)
);
CREATE UNIQUE INDEX [IPK_RELATORIO] ON [RELATORIO]([ID_RELATORIO]);

-- PEDIDO
CREATE TABLE [PEDIDO]
(
[ID_PEDIDO] INTEGER NOT NULL,
[ID_CLIENTE] INTEGER NOT NULL,
[ID_VENDEDOR] INTEGER NOT NULL,
[ID_LOJA] INTEGER NOT NULL,
[STATUS] NVARCHAR(160) NOT NULL,
[TEMPO_ESPERA] DATETIME NOT NULL,
[VALOR_PEDIDO] DOUBLE NOT NULL,
[DATA_PEDIDO] DATETIME NOT NULL,
CONSTRAINT [PK_PEDIDO] PRIMARY KEY ([ID_PEDIDO])
CONSTRAINT [FK_PEDIDO_CLIENTE] FOREIGN KEY ([ID_CLIENTE]) REFERENCES
CLIENTE(ID_CLIENTE),
CONSTRAINT [FK_PEDIDO_VENDEDOR] FOREIGN KEY ([ID_VENDEDOR]) REFERENCES
VENDEDOR(ID_VENDEDOR),
CONSTRAINT [FK_PEDIDO_LOJA] FOREIGN KEY ([ID_LOJA]) REFERENCES
LOJA(ID_LOJA)
);
CREATE UNIQUE INDEX [IPK_PEDIDO] ON [PEDIDO]([ID_PEDIDO]);

-- ITENS_PEDIDO
CREATE TABLE [ITENS_PEDIDO]
(
[ID_ITENS_PEDIDO] INTEGER NOT NULL,
[ID_PEDIDO] INTEGER NOT NULL,
[ID_PRODUTO] INTEGER NOT NULL,
[QUTD_PRODUTO] INTEGER NOT NULL,
CONSTRAINT [PK_ITENS_PEDIDO] PRIMARY KEY ([ID_ITENS_PEDIDO])
CONSTRAINT [FK_ITENS_PEDIDO_PEDIDO] FOREIGN KEY ([ID_PEDIDO]) REFERENCES
PEDIDO(ID_PEDIDO),
CONSTRAINT [FK_ITENS_PEDIDO_PRODUTO] FOREIGN KEY ([ID_PRODUTO]) REFERENCES
PRODUTO(ID_PRODUTO)
);
CREATE UNIQUE INDEX [IPK_ITENS_PEDIDO] ON [ITENS_PEDIDO]([ID_ITENS_PEDIDO]);


-- INSERT
-- Inserindo registros na tabela Fornecedor
INSERT INTO FORNECEDOR (ID_FORNECEDOR, NOME, EMAIL, ENDERECO, CNPJ, TELEFONE)
VALUES 
	(1, 'Coca Cola', 'coca@cocacola.com.br', 'rua coquinha gelada, 865', '000000000-00', '31900003030'),
	(2, 'Fanta', 'fanta@fanta.com.br', 'rua fantinha, 21', '000000000-00', '31900008080'),
	(3, 'H2O', 'H20@h20.com.br', 'rua dos limoes, 44', '000000000-00', '31905503030');


-- Inserindo registros na tabela Loja
INSERT INTO LOJA (ID_LOJA, NOME, ENDERECO, TELEFONE)
VALUES
	(1, 'Kuat Lover', 'Rua do Guaraná 876', '3134433434'),
	(2, 'Pepsi Chata', 'Rua do Zé 55', '31987675465'),
	(3, 'Fantinha', 'Rua roxinha', '31955554444');

-- Inserindo registros na tabela Produto
INSERT INTO PRODUTO (ID_PRODUTO, ID_FORNECEDOR, NOME, VALOR_PRODUTO)
VALUES 
	(1, 1, 'Lata Coca 300ml', 3.50),
	(2, 2, 'Lata Fanta uva 300ml', 3.50),
	(3, 3, 'H2O Limoneto', 3.50);

-- Inserindo registros na tabela Usuario
INSERT INTO USUARIO (ID_USUARIO, LOGIN, SENHA, EMAIL)
VALUES 
	(1, 'zezinho', 'amococa123', 'zezinho23@gmail.com'),
	(2, 'rita.neves', '20212021', 'ritinhaneves@gmail.com'),
	(3, 'joao.muni', 'joaozinho2001', 'joaomuni@gmail.com');

-- Inserindo registros na tabela Cliente
INSERT INTO CLIENTE (ID_CLIENTE, ID_USUARIO, NOME, CPF, ENDERECO, TELEFONE)
VALUES 
	(1, 1, 'José da Silva', '09809809800', 'rua da bahia 87', '3134159491'),
	(2, 2, 'Rita Neves de Jesus', '09809809822', 'rua maragogi 21', '3134152391'),
	(3, 3, 'João Muni da Costa', '08809009800', 'rua de buzios', '3134159400');

-- Inserindo registros na tabela Estoque
INSERT INTO ESTOQUE (ID_ESTOQUE, ID_PRODUTO, ID_LOJA, QUTD_PRODUTO)
VALUES 
	(1, 1, 1, 34),
	(2, 2, 2, 55),
	(3, 3, 3, 20);


-- UPDATE
UPDATE FORNECEDOR SET ENDERECO = 'Rua Guaraná é melhor que coca 777' WHERE ID_FORNECEDOR = 1;
UPDATE LOJA SET TELEFONE = '3112345678' WHERE ID_LOJA = 1;
UPDATE PRODUTO SET VALOR_PRODUTO = 3.80 WHERE VALOR_PRODUTO = 3.50;
UPDATE LOJA SET NOME = 'Bebidas Delicinhas' WHERE ID_LOJA = 1;


-- DELETE
DELETE FROM FORNECEDOR WHERE ID_FORNECEDOR = 1;
DELETE FROM LOJA WHERE NOME LIKE 'Bebida%';
DELETE FROM PRODUTO WHERE NOME = 'Lata Coca 300ml';
DELETE FROM LOJA WHERE ID_LOJA = 1;


-- SELECT
SELECT * FROM LOJA WHERE NOME LIKE 'Bebidas%';
SELECT ID_FORNECEDOR, NOME FROM FORNECEDOR;
SELECT * FROM PRODUTO WHERE VALOR_PRODUTO = 3.80;
SELECT NOME FROM PRODUTO WHERE NOME LIKE '%ml%';
SELECT NOME, VALOR_PRODUTO AS PREÇO FROM PRODUTO;


-- SELECT COM JOIN
-- Selecionar produtos com informações do fornecedor associado
SELECT P.ID_PRODUTO, P.NOME, P.VALOR_PRODUTO AS VALOR, F.ID_FORNECEDOR, F.NOME AS [NOME FORNECEDOR]
FROM PRODUTO P
INNER JOIN FORNECEDOR F ON P.ID_FORNECEDOR = F.ID_FORNECEDOR;

-- Selecionar cliente com seu usuário
SELECT C.ID_CLIENTE, C.NOME, U.LOGIN, U.EMAIL
FROM CLIENTE C
INNER JOIN USUARIO U ON C.ID_CLIENTE = U.ID_USUARIO;

-- Selecionar dados de estoque com dados do produto e da loja
SELECT 
	E.ID_ESTOQUE,
	E.QUTD_PRODUTO AS [QUANTIDADE EM ESTOQUE],
	P.NOME AS PRODUTO,
	P.VALOR_PRODUTO,
	L.NOME AS LOJA
FROM 
	ESTOQUE E
INNER JOIN
	PRODUTO P ON E.ID_PRODUTO = P.ID_PRODUTO 
INNER JOIN 
	LOJA L ON E.ID_LOJA  = L.ID_LOJA;

-- Selecionar produtos com dados do fornecedor e estoque
SELECT 
	P.ID_PRODUTO,
	P.NOME AS PRODUTO,
	P.VALOR_PRODUTO,
	F.NOME AS FORNECEDOR,
	E.QUTD_PRODUTO AS [QUANTIDADE EM ESTOQUE]
FROM 
	PRODUTO P
INNER JOIN 
	FORNECEDOR F ON F.ID_FORNECEDOR  = P.ID_FORNECEDOR  
INNER JOIN
	ESTOQUE E ON E.ID_PRODUTO = P.ID_PRODUTO;

